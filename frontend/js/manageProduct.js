document.addEventListener("DOMContentLoaded", function () {
    const admin = JSON.parse(localStorage.getItem("admin"));
    initAdminInfo(admin);
    setupFileInput(); // 
    setupLogout();
    setupAddProductForm();
    loadProducts(); 
    setupDeleteProduct();
    loadCategories();
});

// G√°n s·ª± ki·ªán m·ªü modal khi click n√∫t "X√≥a"
document.addEventListener("click", function (e) {
    if (e.target.classList.contains("remove")) {
        const productId = e.target.getAttribute("data-id");
        document.getElementById("product-id").textContent = productId;
        $('#deleteConfirmModal').modal('show');
    }
});

function loadCategories() {
  fetch('http://localhost:3000/categories')
    .then(res => res.json())
    .then(data => {
      console.log("D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ server:", data);
      const select = document.getElementById("product-category");
      
      if (!Array.isArray(data)) {
        throw new Error("K·∫øt qu·∫£ tr·∫£ v·ªÅ kh√¥ng ph·∫£i l√† m·∫£ng.");
      }

      data.forEach(category => {
        const option = document.createElement("option");
        option.value = category.id;
        option.textContent = category.name;
        select.appendChild(option);
      });
    })
    .catch(err => console.error("L·ªói khi t·∫£i category:", err));
}



function setupDeleteProduct() {
    const confirmDeleteBtn = document.getElementById("confirmDeleteBtn");

    confirmDeleteBtn.addEventListener("click", function () {
        const productId = document.getElementById("product-id").textContent;
        const token = JSON.parse(localStorage.getItem("admin"))?.token;

        fetch(`http://localhost:3000/products/${productId}`, {
            method: "DELETE",
            headers: {
                Authorization: `Bearer ${token}`
            }
        })
        .then(res => res.json())
        .then(data => {
            if (data.message === "Product deleted successfully") {
                showNotification("X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!", true);

                // ·∫®n modal
                $('#deleteConfirmModal').modal('hide');

                // X√≥a d√≤ng s·∫£n ph·∫©m kh·ªèi b·∫£ng
                const rowToDelete = document.querySelector(`a.remove[data-id="${productId}"]`)?.closest("tr");
                if (rowToDelete) rowToDelete.remove();
            } else {
                showNotification(data.error || "X√≥a s·∫£n ph·∫©m th·∫•t b·∫°i!", false);
            }
        })
        .catch(err => {
            console.error("L·ªói khi x√≥a:", err);
            showNotification("L·ªói k·∫øt n·ªëi ƒë·∫øn server!", false);
        });
    });
}


// C·∫≠p nh·∫≠t giao di·ªán s·∫£n ph·∫©m t·ª´ database
function loadProducts() {
    const tbody = document.querySelector(".product-table tbody");
    if (!tbody) return;
  
    // X√≥a n·ªôi dung c≈© (n·∫øu c·∫ßn l√†m m·ªõi)
    /*tbody.innerHTML = "";*/
  
    fetch("http://localhost:3000/products/all")
      .then((res) => res.json())
      .then((data) => {
        console.log("D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ server:", data);
  
        // Ki·ªÉm tra v√† l·∫∑p qua m·∫£ng s·∫£n ph·∫©m
        if (data.success && Array.isArray(data.products)) {
          data.products.forEach((product) => {
            const row = document.createElement("tr");
  
            row.innerHTML = `
              <td><input type="checkbox"></td>
              <td>${product.product_id}</td>
              <td class="product-info">
                <img src="http://localhost:3000/uploads/${product.image_url}" alt="S·∫£n ph·∫©m">
                <div><strong>${product.product_name}</strong></div>
              </td>
              <td>${formatSales(product.sales)}</td>
              <td>${Number(product.price).toLocaleString()} ƒë 
                  <span class="discount">${product.discount || ""}</span>
              </td>
              <td>${Number(product.quantity).toLocaleString()}</td>
              <td>
                <a href="/frontend/html/updateProduct.html?id=${product.product_id}">C·∫≠p nh·∫≠t</a> | 
                <a href="#" class="remove" data-id="${product.product_id}">X√≥a</a>
              </td>
            `;
  
            tbody.appendChild(row);
          });
        } else {
          console.error("Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ hi·ªÉn th·ªã.");
        }
      })
      .catch((err) => {
        console.error("L·ªói khi load s·∫£n ph·∫©m:", err);
      });
  }
  
  // ƒê·ªãnh d·∫°ng doanh s·ªë
  function formatSales(sales) {
    if (!sales) return "0";
    const k = sales / 1000;
    return k >= 1 ? `${k.toFixed(1)}k` : sales;
  }
  
  
// H√†m hi·ªÉn th·ªã th√¥ng b√°o
function showNotification(message, isSuccess) {
    const notification = document.getElementById("notification");
    notification.innerText = message;
    notification.style.display = "block";
    notification.style.backgroundColor = isSuccess ? "#d4edda" : "#f8d7da";
    notification.style.color = isSuccess ? "#155724" : "#721c24";
    notification.style.border = isSuccess ? "1px solid #c3e6cb" : "1px solid #f5c6cb";
  
    // ·∫®n th√¥ng b√°o sau 3 gi√¢y
    setTimeout(() => {
      notification.style.display = "none";
    }, 5000);
  }  


// ‚úÖ H√†m g·ªçi khi click "Th√™m s·∫£n ph·∫©m m·ªõi"
function setupAddProductForm() {
    const openButton = document.getElementById("add-product-button"); // ‚úÖ S·ª≠a ID ·ªü ƒë√¢y
    const modal = document.getElementById("productModal");
    const closeButton = document.getElementById("close-form");
  
    if (!openButton || !modal || !closeButton) return;
  
    // M·ªü modal khi b·∫•m n√∫t "Th√™m s·∫£n ph·∫©m"
    openButton.addEventListener("click", () => {
      modal.style.display = "block";
    });
  
    // ƒê√≥ng modal khi b·∫•m n√∫t ƒë√≥ng (d·∫•u x)
    closeButton.addEventListener("click", () => {
      modal.style.display = "none";
    });
  
    // ƒê√≥ng modal khi click ra ngo√†i modal
    window.addEventListener("click", (event) => {
      if (event.target === modal) {
        modal.style.display = "none";
      }
    });
  
    // X·ª≠ l√Ω khi ·∫•n n√∫t "ƒêƒÉng"
    const publishButton = document.getElementById("publish-product");
    if (publishButton) {
        publishButton.addEventListener("click", () => { 
            const form = document.getElementById("addProductForm");
            form.addEventListener("submit", function (e) {
              
              e.preventDefault(); // ch·∫∑n reload
              const formData = new FormData(form);
              const token = JSON.parse(localStorage.getItem("admin"))?.token;
              const modal = document.getElementById("productModal"); // üî• th√™m d√≤ng n√†y
          
              fetch("http://localhost:3000/products/addProduct", {
                method: "POST",
                body: formData,
                headers: {
                  Authorization: `Bearer ${token}`,
                },
              })
                .then((res) => res.json())
                .then((data) => {
                    console.log("Server response:", data); // ƒë·ªÉ debug
                  
                    if (data.success || data.message === "Product added") {
                      modal.style.display = "none";
                      showNotification("Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!", true);
                      loadProducts();
                    } else if (data.error) {
                      // Hi·ªÉn th·ªã l·ªói c·ª• th·ªÉ t·ª´ server tr·∫£ v·ªÅ
                      showNotification(`L·ªói: ${data.error}`, false);
                    } else {
                      // Tr∆∞·ªùng h·ª£p kh√¥ng x√°c ƒë·ªãnh
                      showNotification("Th√™m s·∫£n ph·∫©m th·∫•t b·∫°i! L·ªói kh√¥ng r√µ nguy√™n nh√¢n.", false);
                      modal.style.display = "none";
                    }
                  })                  
                .catch((error) => {
                  console.error("L·ªói:", error);
                  showNotification("L·ªói k·∫øt n·ªëi ƒë·∫øn server!", false);
                  modal.style.display = "none";
                });
            });
          });          
    }
  }

// Kh·ªüi t·∫°o th√¥ng tin admin
function initAdminInfo(admin) {
    const adminInfo = document.getElementById("admin-Info");
    const adminnameElement = document.getElementById("adminname");
    const defaultName = document.getElementById("default-name");
    const fullNameElement = document.getElementById("profile-name");

    if (admin) {
        if (admin.full_name) {
            fullNameElement.textContent = admin.full_name;
        }
        if (adminInfo && adminnameElement) {
            adminnameElement.textContent = admin.adminname;
            adminInfo.style.display = "inline-flex";
        }
        if (defaultName) defaultName.style.display = "none";

        setAdminFormValues(admin);

        if (admin.avatar) {
            document.getElementById("avatar-preview").src = `http://localhost:3000/${admin.avatar}`;
        }
    } else {
        if (adminInfo) adminInfo.style.display = "none";
        if (defaultName) defaultName.style.display = "inline-block";
    }
    console.log("LocalStorage admin:", admin);
}

// ƒê·ªãnh nghƒ©a h√†m setAdminFormValues
function setAdminFormValues(admin) {
    // ƒêi·ªÅn th√¥ng tin admin v√†o c√°c tr∆∞·ªùng trong form
    const adminnameInput = document.getElementById("adminname-input");
    const fullNameInput = document.getElementById("full-name-input");

    if (adminnameInput) adminnameInput.value = admin.adminname || "";
    if (fullNameInput) fullNameInput.value = admin.full_name || "";
}

// Hi·ªÉn th·ªã menu dropdown
function myFunction() {
    document.getElementById("admin-dropdown").classList.toggle("show");
}

// ƒê√≥ng dropdown khi click ra ngo√†i
window.onclick = function (event) {
    if (!event.target.closest("#admin-Info")) { 
        const dropdown = document.getElementById("admin-dropdown");
        if (dropdown.classList.contains("show")) {
            dropdown.classList.remove("show");
        }
    }
};

// X·ª≠ l√Ω ƒëƒÉng xu·∫•t
function setupLogout() {
    document.getElementById("logout-btn").addEventListener("click", function (event) {
        event.preventDefault();
        
        fetch("http://localhost:3000/auth/logout", { 
            method: "POST", 
            headers: { "Content-Type": "application/json" } 
        })
        .then(response => response.json())
        .then(() => {
            localStorage.removeItem("admin");
            window.location.href = "/frontend/html/homepage.html";
        })
        .catch(error => console.error("L·ªói khi logout:", error));
    });
}

// ƒê·ªãnh nghƒ©a h√†m setupFileInput
function setupFileInput() {
    // Ch·ªçn t·∫•t c·∫£ c√°c input file tr√™n trang
    const fileInputs = document.querySelectorAll('input[type="file"]');
    
    // L·∫∑p qua c√°c input file v√† th√™m s·ª± ki·ªán onchange
    fileInputs.forEach(input => {
        input.addEventListener('change', function(event) {
            const fileName = event.target.files[0] ? event.target.files[0].name : 'No file selected';
            console.log('File selected:', fileName);
        });
    });
}
