document.addEventListener("DOMContentLoaded", function () {
    const buyButtons = document.querySelectorAll(".buy-button");

    buyButtons.forEach(button => {
        button.addEventListener("click", function () {
            const productId = this.getAttribute("data-id");
            addToCart(productId);
        });
    });


    const productId = getProductIdFromURL();
    if (productId) {
        fetchProduct(productId);
    } else {
        console.error("Kh√¥ng c√≥ ID s·∫£n ph·∫©m trong URL");
    }


    // ----------- X·ª≠ l√Ω tab giao di·ªán -----------
    const tabs = document.querySelectorAll(".tab");
    const contents = document.querySelectorAll(".tab-content");
    const underline = document.querySelector(".tab-underline");

    tabs.forEach((tab, index) => {
        tab.addEventListener("click", () => {
            // X√≥a class 'active' kh·ªèi tab ƒëang ƒë∆∞·ª£c ch·ªçn
            const activeTab = document.querySelector(".tab.active");
            if (activeTab) activeTab.classList.remove("active");

            // Th√™m class 'active' cho tab ƒë∆∞·ª£c click
            tab.classList.add("active");

            // ·∫®n t·∫•t c·∫£ n·ªôi dung tab
            contents.forEach(content => content.classList.remove("active"));

            // Hi·ªÉn th·ªã n·ªôi dung c·ªßa tab ƒë∆∞·ª£c ch·ªçn
            if (contents[index]) contents[index].classList.add("active");

            // C·∫≠p nh·∫≠t v·ªã tr√≠ v√† chi·ªÅu r·ªông c·ªßa thanh underline
            if (underline) {
                underline.style.width = `${tab.offsetWidth}px`;
                underline.style.left = `${tab.offsetLeft}px`;
            }
        });
    });

    // ƒê·∫∑t m·∫∑c ƒë·ªãnh cho tab ƒë·∫ßu ti√™n n·∫øu c√≥
    const defaultActiveTab = document.querySelector(".tab.active");
    if (defaultActiveTab && underline) {
        underline.style.width = `${defaultActiveTab.offsetWidth}px`;
        underline.style.left = `${defaultActiveTab.offsetLeft}px`;
    }

    // ----------- TƒÉng/gi·∫£m s·ªë l∆∞·ª£ng s·∫£n ph·∫©m -----------
    document.querySelectorAll(".quantity").forEach(quantityDiv => {
        const input = quantityDiv.querySelector("input");
        const increaseBtn = quantityDiv.querySelector(".increase");
        const decreaseBtn = quantityDiv.querySelector(".decrease");
    
        // L·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ API ho·∫∑c DOM
        const stockQuantity = 300; // Gi·∫£ s·ª≠ l√† s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong kho (s·∫Ω l·∫•y t·ª´ API th·ª±c t·∫ø)
    
        // S·ª± ki·ªán cho n√∫t +
        increaseBtn.addEventListener("click", () => {
            let value = parseInt(input.value);
            if (!isNaN(value)) {
                if (value < stockQuantity) {
                    input.value = value + 1;
                } else {
                    showNotification("S·ªë l∆∞·ª£ng kh√¥ng th·ªÉ v∆∞·ª£t qu√° s·ªë l∆∞·ª£ng trong kho.", "error");
                }
            }
        });
    
        // S·ª± ki·ªán cho n√∫t -
        decreaseBtn.addEventListener("click", () => {
            let value = parseInt(input.value);
            if (!isNaN(value) && value > 1) {
                input.value = value - 1;
            }
        });
    
        // Ki·ªÉm tra khi ng∆∞·ªùi d√πng nh·∫≠p s·ªë l∆∞·ª£ng th·ªß c√¥ng
        input.addEventListener("input", () => {
            let value = parseInt(input.value);
            if (isNaN(value) || value <= 0) {
                showNotification("Vui l√≤ng nh·∫≠p s·ªë nguy√™n d∆∞∆°ng.", "error");
                input.value = 1;  // ƒê·∫∑t l·∫°i gi√° tr·ªã v·ªÅ 1 khi nh·∫≠p sai
            } else if (value > stockQuantity) {
                showNotification("S·ªë l∆∞·ª£ng kh√¥ng th·ªÉ v∆∞·ª£t qu√° s·ªë l∆∞·ª£ng trong kho.", "error");
                input.value = stockQuantity;  // ƒê·∫∑t l·∫°i gi√° tr·ªã v·ªÅ s·ªë l∆∞·ª£ng t·ªëi ƒëa trong kho
            }
        });
    });
    

    // ----------- G·ªçi c√°c h√†m kh√°c sau khi DOM s·∫µn s√†ng -----------
    fetchProduct(productId);
    fetchProducts();
    handleUserDisplay();
    setupLogout();
});

function addToCart(productId) {
    const user = JSON.parse(localStorage.getItem("user"));
    const userId = user?.id;

    if (!userId) {
        showNotification("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng.", "error");
        return;
    }

    // L·∫•y gi√° tr·ªã s·ªë l∆∞·ª£ng t·ª´ input
    const qtyInput = document.querySelector(".quantity input");
    const quantity = parseInt(qtyInput.value, 10) || 1;

    // L·∫•y s·ªë l∆∞·ª£ng trong kho t·ª´ API ho·∫∑c DOM
    const stockQuantity = 10;  // Gi·∫£ s·ª≠ l√† s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong kho

    if (quantity > stockQuantity) {
        showNotification("S·ªë l∆∞·ª£ng kh√¥ng th·ªÉ v∆∞·ª£t qu√° s·ªë l∆∞·ª£ng trong kho.", "error");
        return;
    }

    fetch(`http://localhost:3000/cart/addItem`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            user_id: userId,
            product_id: productId,
            quantity: quantity
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showNotification("üõí " + data.message, "success");
            updateCartDisplay();
        } else {
            showNotification("‚ö†Ô∏è " + data.error, "error");
        }
    })    
    .catch(error => {
        console.error("L·ªói:", error);
        showNotification("‚ùå L·ªói khi th√™m v√†o gi·ªè h√†ng.", "error");
    });
}


// N·∫øu ƒëang ·ªü trang gi·ªè h√†ng, g·ªçi API ƒë·ªÉ hi·ªÉn th·ªã d·ªØ li·ªáu m·ªõi
function updateCartDisplay() {
    const userId = localStorage.getItem("user_id");
    if (!userId) return;

    fetch(`http://localhost:3000/cart/${userId}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const tbody = document.querySelector("tbody");
                //tbody.innerHTML = ""; // Clear existing cart items

                data.cart.forEach(item => {
                    const row = `
                        <tr>
                            <td><input type="checkbox"></td>
                            <td>
                                <div class="product">
                                    <img src="${item.image_url}" alt="S·∫£n ph·∫©m">
                                    <span>${item.product_name}</span>
                                </div>
                            </td>
                            <td><strong>${formatCurrency(item.price)}</strong></td>
                            <td>
                                <div class="quantity-control">
                                    <button>-</button>
                                    <input type="text" value="${item.quantity}">
                                    <button>+</button>
                                </div>
                            </td>
                            <td><strong>${formatCurrency(item.price * item.quantity)}</strong></td>
                            <td><span class="remove" data-id="${item.product_id}">X√≥a</span></td>
                        </tr>
                    `;
                    tbody.insertAdjacentHTML("beforeend", row);
                });
            }
        });
}

function formatCurrency(amount) {
    return amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
}

// ------- H√†m l·∫•y danh s√°ch sp t·ª´ file json
// H√†m l·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ API v√† hi·ªÉn th·ªã tr√™n trang
function fetchProducts() {
    fetch("http://localhost:3000/products/list")
        .then(response => response.json())
        .then(data => {
            renderProducts("best-seller", data, 5);
        })
        .catch(error => console.error("L·ªói t·∫£i d·ªØ li·ªáu:", error));
}

// H√†m hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m theo danh m·ª•c
function renderProducts(sectionId, products, limit) {
    const container = document.getElementById(sectionId);
    if (!container) return;
    
    container.innerHTML = "";
    products.slice(0, limit).forEach(product => {
        const productBox = document.createElement("div");
        productBox.classList.add("product-box");

        productBox.innerHTML = `
            <img src="${product.image}" alt="${product.name}" class="product-image">
            <h3 class="product-category">${product.category}</h3>
            <h3 class="product-name">${product.name}</h3>
            <p class="product-price">${product.price}</p>
        `;

        // Th√™m s·ª± ki·ªán click ƒë·ªÉ chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang chi ti·∫øt s·∫£n ph·∫©m
        productBox.addEventListener("click", function() {
            const productId = this.getAttribute("data-id");
            window.location.href = `/frontend/html/product.html?id=${productId}`;
        });

        container.appendChild(productBox);
    });
}



function getProductIdFromURL() {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get("id"); // v√≠ d·ª• tr·∫£ v·ªÅ "3" t·ª´ ?id=3
}


// ----- H√†m l·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ API v√† hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt sp -----
function fetchProduct(productId) {
    fetch(`http://localhost:3000/products/${productId}`)
        .then(response => response.json())
        .then(data => {
            if (data && data.success && data.product) {
                renderProductDetail(data.product);
                
        
            } else {
                console.error("Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m");
            }
        })
        .catch(error => {
            console.error("L·ªói khi t·∫£i chi ti·∫øt s·∫£n ph·∫©m:", error);
        });
}


function renderProductDetail(product) {
    document.getElementById("product-image").src = product.image_url ? `http://localhost:3000/uploads/${product.image_url}` : 'default-image-path.jpg'; // ƒê·∫∑t ·∫£nh m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng c√≥ ·∫£nh trong database
    document.getElementById("product-name-main").textContent = product.product_name;
    document.getElementById("product-name-desciption").textContent = product.product_name;
    document.getElementById("product-id").textContent = product.product_id;
    document.getElementById("product-desciption").textContent = product.product_description;
    document.getElementById("product-price").textContent = Number(product.price).toLocaleString("vi-VN") + " ƒë";
    // C·∫≠p nh·∫≠t th√™m n·∫øu b·∫°n c√≥ c√°c tr∆∞·ªùng kh√°c (brand, origin, packaging, etc.)

    // G√°n productId v√†o n√∫t th√™m gi·ªè h√†ng
    const addToCartBtn = document.querySelector(".buy-button");
    if (addToCartBtn) {
        addToCartBtn.setAttribute("data-id", product.product_id);
    }
}


// ----- H√†m x·ª≠ l√Ω hi·ªÉn th·ªã th√¥ng tin ng∆∞·ªùi d√πng t·ª´ localStorage -----
function handleUserDisplay() {
    const userString = localStorage.getItem("user");
    const user = userString ? JSON.parse(userString) : null;
    const userInfo = document.getElementById("user-info");
    const usernameElement = document.getElementById("username");
    const loginButton = document.querySelector(".login-btn");

    if (user) {
        const link = document.getElementById("view-orders-link");
        if (link) {
            link.href = `/frontend/html/viewOrder.html?id=${user.id}`;
        }
    }

    if (user) {
        if (usernameElement) usernameElement.textContent = user.username;
        if (userInfo) userInfo.style.display = "inline-flex";
        if (loginButton) loginButton.style.display = "none";
    } else {
        if (userInfo) userInfo.style.display = "none";
        if (loginButton) loginButton.style.display = "inline-block";
    }
    console.log("localStorage user:", user);
}

// ----- H√†m x·ª≠ l√Ω dropdown menu cho th√¥ng tin ng∆∞·ªùi d√πng -----
function myFunction() {
    const dropdown = document.getElementById("user-dropdown");
    if (dropdown) dropdown.classList.toggle("show");
}

window.addEventListener("click", function(event) {
    if (!event.target.closest("#user-info")) {
        const dropdown = document.getElementById("user-dropdown");
        if (dropdown) dropdown.classList.remove("show");
    }
});

// ----- H√†m x·ª≠ l√Ω logout -----
function setupLogout() {
    const logoutBtn = document.getElementById("logout-btn");
    if (!logoutBtn) return;

    logoutBtn.addEventListener("click", function(event) {
        event.preventDefault();
        fetch("http://localhost:3000/auth/logout", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
        })
        .then(response => response.json())
        .then(data => {
            console.log("Logout response:", data);
            localStorage.removeItem("user");
            window.location.href = "/frontend/html/homepage.html";
        })
        .catch(error => {
            console.error("L·ªói khi logout:", error);
        });
    });
}

// ----- H√†m hi·ªÉn th·ªã th√¥ng b√°o (ch·∫≥ng h·∫°n khi th√™m v√†o gi·ªè h√†ng) -----
function showNotification(message, type = "success") {
    const notification = document.getElementById("cartNotification");
    const icon = document.getElementById("notificationIcon");
    const text = document.getElementById("notificationText");

    // ƒê·∫∑t n·ªôi dung th√¥ng b√°o
    text.textContent = message;

    // Thay ƒë·ªïi icon theo lo·∫°i
    switch (type) {
        case "success":
            icon.src = "https://cdn-icons-png.flaticon.com/512/845/845646.png"; // tick xanh
            break;
        case "error":
            icon.src = "https://cdn-icons-png.flaticon.com/512/463/463612.png"; // d·∫•u X ƒë·ªè
            break;
        case "warning":
            icon.src = "https://cdn-icons-png.flaticon.com/512/595/595067.png"; // ch·∫•m than v√†ng
            break;
        default:
            icon.src = "https://cdn-icons-png.flaticon.com/512/845/845646.png";
    }

    // Hi·ªÉn th·ªã
    notification.style.display = "block";

    // T·ª± ·∫©n sau 3 gi√¢y
    setTimeout(() => {
        notification.style.display = "none";
    }, 3000);
}

